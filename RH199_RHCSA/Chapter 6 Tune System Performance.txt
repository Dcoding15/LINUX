Process Control with Signals: -
----------------------------
	1. Signal is software interrupt deliveeered to processes.
	2. Signal can be an error, an external event or an explicit command or keyboard sequence.
	3. Signal has one of the following actions: -
		i. TERM -> exit program
		ii. CORE -> core dump and exit
		iii. STOP -> suspend and resume
	4. Signal through keyboard sequence: -
		i. ctrl + c		-> exit program
		ii. ctrl + \	-> core dump and exit
		iii. ctrl + z	-> suspend and resume
	5. kill command uses a PID number to send signal to a process.
	6. To display running process use ps and jobs command.
	7. To display user logins and currently running processes use w command.
	8. We can send any processes to background by using Ctrl+z and '[command name] &'.

To display background processes					-> jobs
To kill a backgroun process using kill command	-> kill -s [signal] %[job number]

To display all available signals         		-> kill -l
To kill a process using process ID       		-> kill -s [signal] [process ID]
To kill a process using naming pattern   		-> pkill -s [signal] [process naming pattern]
To kill all process and logout           		-> pkill -
To search specific process using pattern 		-> pgrep [option] [pattern]
To kill multiple process using command name		-> killall [command name]

Monitor Process Activity: -
------------------------
To display current load average						-> uptime
To display no. of CPU's on a system					-> lscpu
To display a dynamic view of the system's process	-> top

Adjust Tuning Profiles: -
----------------------
Use tuned daemon to optimise system performance by selectin a tuning profile. There are two types of tuning: -
(i) Static Tuning: Adjusts system settings based on fixed conditions which require manual updates and are not adaptive to real-time variations.
(ii) Dynamic Tuning: Continuously adjusts settings in real-time based on current performance data, adapting to changing conditions automatically. Bydefault dynamic tuning is disabled. To enable it set dynamic_tuning variable to 1 in the /etc/tuned/tuned-main.conf configuration file.

Tuned monitor three things: -
(i) disk	-> disk load based on no. of I/O operations for per disk device.
(ii) net	-> network load based on no. of transferred packets per network card.
(iii) load	-> cpu load based on no. of processes using per cpu

Tuned application provides profiles in the following categories: -
(i) Power-saving profiles
(ii) Performance-boosting profiles

Configuration file for tuned daemon				-> /etc/tuned/tuned-main.conf
Configuration file for tuned profiles			-> /usr/lib/tuned/[tuned profile name]/tuned.conf
To identify currently active profiles			-> tuned-adm active
To display all related commands					-> tuned-adm list
To display infomation related to given profile	-> tuned-adm profile-info [tuned profile name]
To switch tuned profile							-> tuned-adm profile [tuned profile name]
To display recommended tuned profile			-> tuned-adm recommend
To turn off tuned application					-> tuned-adm off

Linux Process Scheduling: -
------------------------
Nice value				-> the priority of a process
Highest nice value		-> -20
Lowest nice value		-> 19
Processes inherit their starting nice value from their parent process.
Regular user can increase nice value.
Root user can both increase and decrease nice value.

To start a process with modified nice value		-> nice -n [number] [command]
To modify nice value of a running process		-> renice -n [number] [process id]


Note: -
====
Kill Signal	 -	Meaning
-----------		-------
	HUP		 -	hangup
	INT		 -	interrupt
	QUIT	 -	quit
	ILL		 -	illegal instruction
	TRAP	 -	trace / breakpoint trap
	ABRT	 -	abort
	BUS		 -	bus error
	FPE		 -	floating point exception
	KILL	 -	kill process
	USR1	 -	user defined signal 1
	SEGV	 -	segmentation fault
	USR2	 -	user defined signal 2
	PIPE	 -	broken pipe
	ALRM	 -	alarm clock
	TERM	 -	terminate
	TKFLT	 -	stack fault
	CHLD	 -	child status changed
	CONT	 -	continue
	STOP	 -	pause the process
	TSTP	 -	terminal stop
	TTIN	 -	background read from TTY
	TTOU	 -	background write to TTY
	URG		 -	urgent condition on socket
	XCPU	 -	CPU time limit exceeded
	XFSZ	 -	file size limit exceeded
	VTALRM	 -	virtual timer expired
	PROF	 -	profiling timer expired
	WINCH	 -	window size change
	IO		 -	I/O now possible
	PWR		 -	power failure restart
	SYS		 -	bad system call
	UNUSED	 -	reserved

top command: -
-----------
Key				Purpose
---				-------
h				display help
l/t/m			toggle of load/thread/memory header lines
1				toggle for individual CPU
s				change refrehing rate
shift+b			toggle bold rext for runing processes
shift+h			display process summary of threads
u, shift+u		filter username
shift+m			sort process listing by memory usage (desceding order)
shift+p			sort process listing by memory usage (ascending order)
k				toggle to kill process using PID and SIGNAL
shift+w			save the current display configuration after top restart
q				quit from top
